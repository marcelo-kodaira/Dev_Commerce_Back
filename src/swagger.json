{
    "openapi": "3.0.3",
    "info": {
      "title": "Documentação API SXB",
      "description": "Sxb Backend",
      "version": "1.0.0"
    },
    "paths": {
      "/users": {
        "post": {
            "summary": "Cadastro de usuário",
            "description": "Rota responsável pelo cadastro de um novo usuário",
            "tags": ["Usuários"],
						"operationId": "postUser",
            "requestBody": {
            "content": {
                "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/User"
                },
                "example": {
                    "name": "string",
                    "email": "string",
                    "password": "string"
                }
                }
            }
            },
            "responses": {
            "201": {
                "description": "Created",
                "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "$ref": "#/components/schemas/User"
                    }
                }
                }
            },
            "400":{
                "description": "Email já cadastrado"
            }
            }
        }
        },

        "/user/{id}": {
					"patch":{
							"summary": "Atualiza um usuário",
							"description": "Atualiza as informações de um usuário pelo ID",
							"tags": ["Usuários"],
							"operationId": "updateUser",
							"parameters": [
								{
								"name": "id",
								"in": "path",
								"description": "id do usuário a ser alterado",
								"required": true,
								"schema": {
										"type": "string"
									}
								}
							],
							"requestBody": {
									"content": {
									"application/json": {
											"schema": {
											"$ref": "#/components/schemas/User"
											},
											"example": {
												"name": "string",
												"email": "string",
												"password": "string"
										}
									}
									}
							},
							"responses": {
									"201": {
									"description": "Patched",
									"content": {
											"application/json": {
											"schema": {
													"type": "object",
													"$ref": "#/components/schemas/User"
											}
											}
									}
									},
									"401":{
										"description": "Token inválido"
									},
									"403": {
										"description": "Você pode deletar apenas sua própria conta"
									}
							}
					},
					"delete":{
						"summary": "Deleta um produto",
						"description": "Rota responsável por deletar um usuário",
						"tags": ["Usuários"],
						"operationId": "deleteUser",
						"parameters": [
							{
							"name": "id",
							"in": "path",
							"description": "id do usuário a ser deletado",
							"required": true,
							"schema": {
									"type": "string"
								}
							}
						],
						"responses": {
								"200": {
								"description": "Ok"
								},
								"401":{
									"description": "Token inválido"
								},
								"403": {
									"description": "Você pode deletar apenas sua própria conta"
								}
						}
					}
			},

			"/login": {
        "post": {
            "summary": "Login de usuário",
            "description": "Rota responsável pelo login",
            "tags": ["Login"],
						"operationId": "login",
            "requestBody": {
            "content": {
                "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/Login"
                },
                "example": {
                    "name": "string",
                    "password": "string"
                }
                }
            }
            },
            "responses": {
            "201": {
                "description": "Created",
                "content": {
                "application/json": {
                    "schema": {
                    "type": "string",
                    "format": "bearerFormat"
                    }
                }
                }
            },
            "400":{
                "description": "Email ou senha inválido"
            }
            }
        }
			},

			"/products": {
				"post":{
					"summary": "Cadastra um produto",
					"description": "Rotas responsável por cadastrar um produto",
					"tags": ["Produtos"],
					"operationId": "postProduct",
					"requestBody": {
							"content": {
							"application/json": {
									"schema": {
									"$ref": "#/components/schemas/Product"
									},
									"example": {
										"name": "string",
										"description": "string",
										"price": "number"
								}
							}
							}
					},
					"responses": {
							"201": {
							"description": "Created",
							"content": {
									"application/json": {
									"schema": {
											"type": "object",
											"$ref": "#/components/schemas/Product"
									}
									}
							}
							},
							"401":{
								"description": "Token inválido"
							}
					}
				},
				"get":{
					"summary": "Lista todos os  produto",
					"description": "Rota responsável por listar todos os produtos",
					"tags": ["Produtos"],
					"operationId": "getProducts",
					"parameters": [
						{
						"name": "name",
						"in": "query",
						"description": "nome do produto a ser listado",
						"schema": {
								"type": "string"
							}
						},
						{
							"name": "price",
							"in": "query",
							"description": "Filtragem por preço, sendo lowest crescente e highest decrescente",
							"schema": {
									"type": "string"
								}
							}
					],
					"responses": {
							"200": {
							"description": "Ok",
							"content": {
									"application/json": {
									"schema": {
											"type": "object",
											"$ref": "#/components/schemas/Product"
									}
									}
							}
							},
							"401":{
								"description": "Token inválido"
							}
					}
				}
			},

			"/products/user": {
				"get":{
					"summary": "Lista todos os produtos de um usuário",
					"description": "Lista todos os produtos do usuário proprietário do token fornecido/",
					"tags": ["Produtos"],
					"operationId": "getMyProducts",
					"responses": {
							"200": {
							"description": "Ok",
							"content": {
									"application/json": {
									"schema": {
											"type": "object",
											"$ref": "#/components/schemas/Product"
									}
									}
							}
						},
						"401":{
							"description": "Token inválido"
						}
					}
				}
	},

			"/products/{id}": {
				"get":{
					"summary": "Lista um produto",
					"description": "Lista um produto pelo ID passado",
					"tags": ["Produtos"],
					"operationId": "getProductId",
					"parameters": [
						{
						"name": "id",
						"in": "path",
						"description": "id do produto a ser listado",
						"required": true,
						"schema": {
								"type": "string"
							}
						}
					],
					"responses": {
							"200": {
							"description": "Ok",
							"content": {
									"application/json": {
									"schema": {
											"type": "object",
											"$ref": "#/components/schemas/Product"
									}
									}
							}
						},
						"400":{
							"description": "Produto não encontrado"
						},
						"401":{
							"description": "Token inválido"
						}
					}
				},
				"patch":{
						"summary": "Atualiza um produto",
						"description": "Rota responsável por atualizar um produto pelo ID",
						"tags": ["Produtos"],
						"operationId": "updateProduct",
						"parameters": [
							{
							"name": "id",
							"in": "path",
							"description": "id do produto",
							"required": true,
							"schema": {
									"type": "string"
								}
							}
						],
						"requestBody": {
								"content": {
								"application/json": {
										"schema": {
										"$ref": "#/components/schemas/Product"
										},
										"example": {
											"name": "string",
											"price": "number",
											"description": "string"
									}
								}
								}
						},
						"responses": {
								"201": {
								"description": "Patched",
								"content": {
										"application/json": {
										"schema": {
												"type": "object",
												"$ref": "#/components/schemas/Product"
										}
										}
								}
								},
								"401":{
									"description": "Token inválido"
								},
							"403":{
								"description": "Você pode deletar apenas produtos cadastrados por você"
							}
						}
				},
		"delete":{
			"summary": "Deleta um Produto",
			"description": "Rota responsável por deletar um produto pelo ID",
			"tags": ["Produtos"],
			"operationId": "deleteProduct",
			"parameters": [
				{
				"name": "id",
				"in": "path",
				"description": "id do produto a ser deletado",
				"required": true,
				"schema": {
						"type": "string"
					}
				}
			],
			"responses": {
					"200": {
					"description": "Deleted"
					},
					"401":{
						"description": "Token inválido"
					},
					"403": {
						"description": "Você pode deletar apenas produtos cadastrados por você"
					}
			}
		}
	}

    },
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
							"ignore-validation": true
            },
            "name": {
              "type": "string",
							"example": "João"
            },
            "email": {
              "type": "string",
							"example": "nome@mail.com"
            }
          }
        },
				"Login":{
					"type": "object",
					"properties":{
						"email": {
							"type":"string",
							"example": "nome@mail.com"
						},
						"password":{
							"type": "string",
							"example": "minhaSenha"
						}
					}
				},
				"Product":{
					"type": "object",
					"properties":{
						"id":{
							"type": "string"
						},
						"name":{
							"type": "string",
							"example": "Televisão"
						},
						"price":{
							"type": "number",
							"example": "1200.50"
						},
						"user":{
							"$ref": "#/components/schemas/User"
						}
					}
				}
      },
      "securitySchemes": {
        "bearerAuth": {
					"description": "Autenticação utilizando JWT",
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }